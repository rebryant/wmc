Most propositional weighted model counting programs convert the input formula into a form that enables arithmetic evaluation, using multiplication for conjunctions and addition for disjunctions. Performing this evaluation with floating-point arithmetic can yield inaccurate results, and it cannot quantify the level of precision achieved. Computing with rational arithmetic gives exact results, but it is costly in both time and space. 

This paper describes how to combine multiple numeric representations to efficiently compute weighted model counts that are guaranteed to meet a user-specified level of precision.  When all weights are nonnegative, we prove that the precision loss during arithmetic evaluation can be tightly bounded; software-based floating-point arithmetic suffices for this case. For problems with negative weights, we show that a combination of interval floating-point arithmetic and rational arithmetic can achieve the twin goals of efficiency and guaranteed precision. In testing our approach, we devise formulas and weight assignments that are especially challenging, in order to maximize the robustness of our result.

